실습과제코드

//1. 테이블을 만들어보자.
CREATE TABLE CUSTOMER_MGR
(
CUS_ID         NUMBER(6)     CONSTRAINTS CUSTOMER_ID_PK PRIMARY KEY,
CUS_NAME       VARCHAR2(30)  CONSTRAINTS CUSTOMER_NAME_NN NOT NULL,
CUS_PHONE      VARCHAR2(30)  CONSTRAINTS CUSTOMER_PHONE_NN NOT NULL,
CUS_DATE       DATE          CONSTRAINTS CUSTOMER_DATE_NN NOT NULL,
CUS_GENDER     VARCHAR2(6)
);
//1.1 CUR_GENDER 칼럼에 제약조건을 걸어보자!
ALTER TABLE CUSTOMER_MGR
ADD CONSTRAINT CUS_GENDER_CH CHECK (CUS_GENDER IN ('M', 'F'));

//ID_NUM_MGR 시퀀스명
//2. 시퀀스를 만들어 보자!

CREATE SEQUENCE ID_NUM_MGR
MINVALUE 1		
MAXVALUE 9999999999
INCREMENT BY 1		
START WITH 1000		
NOCACHE		
NOORDER		
NOCYCLE; 

//+. 현재 생성된 시퀀스 확인
SELECT SEQUENCE_NAME, MIN_VALUE, MAX_VALUE, INCREMENT_BY, CYCLE_FLAG
FROM USER_SEQUENCES; 



//테이블 내 데이터 삭제
TRUNCATE TABLE CUSTOMER_MGR;

//시퀀스 삭제!
DROP SEQUENCE ID_NUM_MGR;
DROP SEQUENCE ACC_ID_NUM;
DROP SEQUENCE ACCIO_ID_NUM;

//테이블 삭제
DROP TABLE CUSTOMER_MGR;
DROP TABLE ACCOUNT_TABLE;
DROP TABLE ACCIO_TABLE;


//테이블을 만들어보자!
CREATE TABLE ACCOUNT_TABLE
(
ACC_ID         NUMBER(6)     CONSTRAINTS ACC_ID_PK PRIMARY KEY,
ACC_BAL        NUMBER(20)    CONSTRAINTS ACC_BAL_CH CHECK (ACC_BAL >= 0),
ACC_DATE       DATE,
ACC_COUNT      NUMBER(6)     CONSTRAINTS ACC_COUNT_CH CHECK (ACC_COUNT >= 0),
CUS_ID         NUMBER(6)     
);
//테이블에 FK제약조건 추가
ALTER TABLE ACCOUNT_TABLE
ADD CONSTRAINT CUS_ID_FK FOREIGN KEY(CUS_ID)
    REFERENCES CUSTOMER_MGR (CUS_ID);

//BALANCE 에 PK추가
ALTER TABLE ACCOUNT_TABLE
ADD CONSTRAINT ACC_BAL_PK PRIMARY KEY(ACC_BAL);

//시퀀스명 ACC_ID_NUM
CREATE SEQUENCE ACC_ID_NUM
MINVALUE 1		
MAXVALUE 9999999999
INCREMENT BY 10		
START WITH 10000		
NOCACHE		
NOORDER		
NOCYCLE; 

//테이블은 만들어보자
CREATE TABLE ACCIO_TABLE
(
ACCIO_ID            NUMBER(6)     CONSTRAINTS ACCIO_ID_PK PRIMARY KEY,
ACC_ID              NUMBER(6),                 
ACCIO_INPUT         NUMBER(20)    CONSTRAINTS ACCIO_INPUT_CH CHECK (ACCIO_INPUT >= 0),
ACCIO_OUTPUT        NUMBER(20)    CONSTRAINTS ACCIO_OUTPUT_CH CHECK (ACCIO_OUTPUT >= 0),
ACCIO_BAL           NUMBER(20)    CONSTRAINTS ACCIO_BAL_CH CHECK (ACCIO_BAL >= 0),
ACCIO_DATE          DATE          
);
//칼럼에 FK추가!
ALTER TABLE ACCIO_TABLE
ADD CONSTRAINT ACC_ID_FK FOREIGN KEY(ACC_ID)
    REFERENCES ACCOUNT_TABLE (ACC_ID);
    

    
//시퀀스명 ACCIO_ID_NUM
CREATE SEQUENCE ACCIO_ID_NUM
MINVALUE 1		
MAXVALUE 9999999999
INCREMENT BY 1	
START WITH 1		
NOCACHE		
NOORDER		
NOCYCLE;

//============기능 파트===================
//기능1. 입력기능
INSERT INTO CUSTOMER_MGR(CUS_ID, CUS_NAME, CUS_PHONE, CUS_DATE, CUS_GENDER)
VALUES (ID_NUM_MGR.NEXTVAL, 'JAMEWS', '010-1231-1337', SYSDATE, 'M');

//기능2. 삭제기능
DELETE FROM CUSTOMER_MGR
WHERE CUS_ID = 1005;

//기능3. 수정기능
UPDATE CUSTOMER_MGR
SET CUS_PHONE = '010-2222-2222'
WHERE CUS_ID = 1005;

//기능4. 검색기능(전체출력)
SELECT *
FROM CUSTOMER_MGR;

//기능5. 검색기능2(고객 ID기반 검색)
SELECT *
FROM CUSTOMER_MGR
WHERE CUS_ID = 1005;

//기능6. 검색기능3(여자만검색)
SELECT *
FROM CUSTOMER_MGR
WHERE CUS_GENDER = 'F';

//기능7. 검색기능4(일자에 등록된 고객 정보)
SELECT *
FROM CUSTOMER_MGR
WHERE CUS_DATE LIKE '19/09/18'; //SYSDATE 에는 시간도 저장되어 있어서 LIKE 19/09/18~~ 로 검색해준다.

//기능8. 검색기능5 (고객정보 도출, 오름차순)
SELECT *
FROM CUSTOMER_MGR
ORDER BY CUS_NAME ASC;

//===================계좌정보 기능===========
//DEFAULT 설정
ALTER TABLE ACCOUNT_TABLE
MODIFY (ACC_BAL DEFAULT 0);

ALTER TABLE ACCOUNT_TABLE
MODIFY (ACC_COUNT DEFAULT 0);

//기능1. 입력기능
INSERT INTO ACCOUNT_TABLE(ACC_ID, ACC_BAL, ACC_DATE, ACC_COUNT, CUS_ID)
VALUES (ACC_ID_NUM.NEXTVAL, DEFAULT, SYSDATE, DEFAULT, 1001);

//기능2. 삭제기능
DELETE FROM ACCOUNT_TABLE
WHERE CUS_ID = 1004;

//기능3. 수정기능
UPDATE ACCOUNT_TABLE
SET ACC_BAL = +300, ACC_COUNT = +1
WHERE ACC_ID = 10010;

//기능4. 검색기능1(모든 계좌 정보 출력)
SELECT *
FROM ACCOUNT_TABLE
ORDER BY ACC_BAL DESC, ACC_COUNT DESC;

//기능5. 검색기능2(계좌 입력받아 정보검색)
SELECT *
FROM ACCOUNT_TABLE
WHERE ACC_ID = 10040;

//기능6.검색기능3(계좌입력받아 잔액정보 반환)
SELECT ACC_BAL
FROM ACCOUNT_TABLE
WHERE ACC_ID = 10040;

//===============계좌입출급 기능=================

//기능1. 입력기능
INSERT INTO ACCIO_TABLE(ACCIO_ID, ACC_ID, ACCIO_INPUT, ACCIO_OUTPUT, ACCIO_BAL, ACCIO_DATE)
VALUES (ACCIO_ID_NUM.NEXTVAL,
        10010, 300, 10, 300 - 10 + 
        (SELECT ACC_BAL FROM ACCOUNT_TABLE WHERE ACC_ID = 10010),
        SYSDATE);

//기능2. 삭제기능
DELETE FROM ACCIO_TABLE
WHERE ACC_ID = 10010;

//기능3. 검색기능1(ID 입력 후 입출금정보 출력 ASC)
SELECT *
FROM ACCIO_TABLE
WHERE ACC_ID = 10010
ORDER BY ACCIO_ID ASC;

//기능4. 검색기능2(id입력 후 해당 입출금정보 출력 DESC)
SELECT *
FROM ACCIO_TABLE
WHERE ACC_ID = 10010
ORDER BY ACCIO_ID DESC;

//기능5. 검색기능3(ID, 일자 입력 후 입출금정보 출력)
SELECT *
FROM ACCIO_TABLE
WHERE ACCIO_ID = 1 AND ACCIO_DATE LIKE '19/09/18';

//기능6. 검색기능4(ID, 시작일, 종료일 입력 / 입출금 정보 출력)
SELECT *
FROM ACCIO_TABLE
WHERE ACC_ID = 10010 AND ACCIO_DATE BETWEEN '19/09/07' AND '19/09/19'; 
        
//기능 + ACC_BAL 에 정보 갱신
UPDATE ACCOUNT_TABLE
SET ACC_BAL = (SELECT ACCIO_BAL FROM ACCIO_TABLE WHERE ACCIO_ID = 3)
WHERE ACC_ID = 10010;




