0917
<<CREATE TABLE>>
(기본)
create table 이름 (칼럼이름 타입(크기), ....)


DESC 이름;
생성한 TABLE 구조확인

[타입]
문자 --> varchar
숫자 --> number
날자 --> date (고정길이 날자)
*검색해서 사용 
http://www.incodom.kr/DB_-_%EB%8D%B0%EC%9D%B4%ED%84%B0_%ED%83%80%EC%9E%85/ORACLE

(크기)는 생략이 가능한데 그러면 기본 크기가 주어짐

만들어놓은 테이블 사용
(기본형)
CLEATE TABLE 이름[칼럼]
AS (생성해놓은 TABLE)
[칼럼]을 쓰면 생성해놓은 TABLE 칼럼수와 일치시켜야한다.
          안쓰면 생성해놓은 칼럼을 따라간다.

<<ALTER TABLE>>

ADD (칼럼추가)
ALTER TABLE 생성해놓은 TABLE이름
ADD (추가할 컬럼이름  타입(크기));

DROP (칼럼삭제)
ALTER TABLE  삭제할 칼럼이 있는 테이블명
DROP COLUMN 삭제할 컬럼명

*********주의**********
고유키(PK)를 다른 테이블에서 사용하고 있을때 
사용되고 있는 FK를 먼저 지워야 PK를 지울수 있다.

MODIFY (칼럼 수정)

ALTER TABLE 테이블명
MODIFY (칼럼이름1 타입(크기) [타입에 맞는 기본식] [NOT NULL],
               칼럼이름2 타입(크기) [타입에 맞는 기본식] [NOT NULL]);

********주의********
- 해당 컬럼의 크기를 늘릴 수는 있지만 줄이지는 못한다. 이는 기존의 데이터가 훼손될 수 있기 때문이다.

- 해당 컬럼이 NULL 값만 가지고 있거나 테이블에 아무 행도 없으면 컬럼의 폭을 줄일 수 있다.

- 해당 컬럼이 NULL 값만을 가지고 있으면 데이터 유형을 변경할 수 있다.

- 해당 컬럼의 DEFAULT 값을 바꾸면 변경 작업 이후 발생하는 행 삽입에만 영향을 미치게 된다.

- 해당 컬럼에 NULL 값이 없을 경우에만 NOT NULL 제약조건을 추가할 수 있다.

SET UNUSED
(삭재마킹)
ALTER TABLE 테이블이름
SET UNUSED(컬럼1, 컬럼2)

DROP UNUSED
(지정테이블의 칼럼전체 삭제)
ALTER TABLE 테이블이름
DROP UNUSED COLUMNS;

RENAME(이름 변경)
RENAME 전테이블이름 TO 새로운테이블이름;

DROP TABLE 테이블이름;
호출한 테이블 삭제

TRUNCATE TABLE 테이블이름;
기존의 테이블의 모든 로우를 제거하게 합니다. 
테이블의 구조는 그대로 유지되며, 테이블의 데이터와 이에 할당된 공간이 해제됩니다. 
제약 조건, 인덱스, 뷰, 동의어 등은 그대로 유지됩니다
